with open('resource.py', 'r') as f:
    read_data = f.read()

role = resource(
    iam.Role(
        "LambdaExecutionRole",
        Path="/",
        Policies=[iam.Policy(
            PolicyName="root",
            PolicyDocument={
                "Version": "2012-10-17",
                "Statement": [{
                    "Action": ["logs:*"],
                    "Resource": "arn:aws:logs:*:*:*",
                    "Effect": "Allow"
                }]
            })],
        AssumeRolePolicyDocument={
            "Version": "2012-10-17",
            "Statement": [{
                "Action": ["sts:AssumeRole"],
                "Effect": "Allow",
                "Principal": {
                    "Service": ["lambda.amazonaws.com"]
                }
            }]
        },
    )
)

function = resource(awslambda.Function(
    'CustomResource',
    Handler='index.handler',
    Code=awslambda.Code(
        ZipFile=read_data
    ),
    Runtime='python2.7',
    Role=GetAtt(role, 'Arn')
))

class CustomResource(cloudformation.AWSCustomObject):
    resource_type = "Custom::CustomResource"

    props = {
        'ServiceToken': (basestring, True),
        'Variable': (basestring, True)
    }


resource(CustomResource(
    "TestMultiplier",
    ServiceToken=GetAtt(function, 'Arn'),
    Variable='5'
))
